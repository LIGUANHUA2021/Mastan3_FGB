# Form implementation generated from reading ui file 'D:\eric7 UI\Model3DView.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6.QtCore import (QCoreApplication, QMetaObject, QPoint, QPointF, QSize, Qt)
from PySide6.QtGui import (QFont, QWheelEvent)
from PySide6.QtWidgets import (QCheckBox, QFrame, QGridLayout, QGroupBox, QHBoxLayout, QLabel, QLineEdit, QPushButton,
                               QSizePolicy, QSlider, QSpacerItem, QToolButton, QVBoxLayout)
from pyqtgraph.opengl import GLViewWidget


class Ui_Model3DView_Dialog(object):
    def setupUi(self, Model3DView_Dialog):
        if not Model3DView_Dialog.objectName():
            Model3DView_Dialog.setObjectName(u"Model3DView_Dialog")
        Model3DView_Dialog.resize(600, 600)
        Model3DView_Dialog.setMinimumSize(QSize(370, 250))
        Model3DView_Dialog.setStyleSheet(u"Line\n"
                                         "{\n"
                                         "	width:1px;\n"
                                         "	color:rgb(245, 245, 245);\n"
                                         "}\n"
                                         "QCheckBox\n"
                                         "{\n"
                                         "	color: rgb(255, 255, 255);\n"
                                         "}\n"
                                         "QCheckBox::disabled\n"
                                         "{\n"
                                         "	color: rgb(80, 80, 80);\n"
                                         "}\n"
                                         "QCheckBox::indicator:disabled\n"
                                         "{\n"
                                         "	background-color: rgb(160, 160, 160);\n"
                                         "}\n"
                                         "QDialog\n"
                                         "{\n"
                                         "	background-color: rgb(43, 43, 43);\n"
                                         "}\n"
                                         "QGroupBox\n"
                                         "{\n"
                                         "	background-color: rgb(128, 128, 128);\n"
                                         "	color: rgb(255, 255, 255);\n"
                                         "}\n"
                                         "QLineEdit\n"
                                         "{\n"
                                         "	border-radius: 3px;\n"
                                         "}\n"
                                         "QLabel\n"
                                         "{\n"
                                         "	color: rgb(255, 255, 255);\n"
                                         "}\n"
                                         "QPushButton\n"
                                         "{\n"
                                         "	background-color: rgb(255, 255, 255);\n"
                                         "	border: 1 px solid;\n"
                                         "	border-radius: 3px;\n"
                                         "}\n"
                                         "QPushButton::hover\n"
                                         "{\n"
                                         "	background-color: rgb(144, 200, 246);\n"
                                         "}\n"
                                         "QPushButton:pressed\n"
                                         "{\n"
                                         "    padding-left: 3px;\n"
                                         "    padding-top: 3px;\n"
                                         "}\n"
                                         "QSlider::groove\n"
                                         "{\n"
                                         "	height: 12px;\n"
                                         "	margin-left: 0px;\n"
                                         "	margin-right: 0px;\n"
                                         "	border: 0px;\n"
                                         "	border-radius: 6px;\n"
                                         "	background-color: rgba(0, 0, 0, 50);\n"
                                         "}\n"
                                         "QSl"
                                         "ider::handle\n"
                                         "{\n"
                                         "	width: 12px;\n"
                                         "	height: 12px;\n"
                                         "	margin-left: 0px;\n"
                                         "	margin-right: 0px;\n"
                                         "	border: 0px;\n"
                                         "	border-radius: 6px;\n"
                                         "	background-color: rgb(224, 224, 224);\n"
                                         "}\n"
                                         "QSlider::sub-page\n"
                                         "{\n"
                                         "	border-top-right-radius: 0px;\n"
                                         "	border-bottom-right-radius: 0px;\n"
                                         "	border-top-left-radius: 6px;\n"
                                         "	border-bottom-left-radius: 6px;\n"
                                         "	background-color: rgb(80, 166, 234);\n"
                                         "}\n"
                                         "QToolButton\n"
                                         "{\n"
                                         "	border-radius: 5px;\n"
                                         "	color: rgb(255, 255, 255);\n"
                                         "}\n"
                                         "QToolButton:hover\n"
                                         "{\n"
                                         "	background-color: rgba(255, 255, 255, 20%);\n"
                                         "}\n"
                                         "QToolButton:pressed\n"
                                         "{\n"
                                         "	background-color: rgba(0, 0, 0, 20%);\n"
                                         "	border-top: 1px solid rgba(0, 0, 0, 50%);\n"
                                         "	border-left: 1px solid rgba(0, 0, 0, 50%);\n"
                                         "}\n"
                                         "QToolButton:checked\n"
                                         "{\n"
                                         "	background-color: rgba(0, 0, 0, 20%);\n"
                                         "}\n"
                                         "#label, #label_2, #label_3, #label_4, #label_5, #label_6\n"
                                         "{\n"
                                         "	color: rgb(255, 255, 0);\n"
                                         "}\n"
                                         "#line_3\n"
                                         "{\n"
                                         "	color:rgb(255, 255, 0);\n"
                                         "}")
        self.verticalLayout_2 = QVBoxLayout(Model3DView_Dialog)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.frame = QFrame(Model3DView_Dialog)
        self.frame.setObjectName(u"frame")
        sizePolicy = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.gridLayout = QGridLayout(self.frame)
        self.gridLayout.setObjectName(u"gridLayout")
        self.graphicsView = CustomGLViewWidget()
        self.graphicsView.setObjectName(u"graphicsView")

        self.gridLayout.addWidget(self.graphicsView, 4, 0, 1, 1)

        self.gridLayout_2 = QGridLayout()
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.label = QLabel(self.frame)
        self.label.setObjectName(u"label")
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Minimum)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy1)
        self.label.setMinimumSize(QSize(0, 16))
        self.label.setMaximumSize(QSize(16777215, 16))

        self.gridLayout_2.addWidget(self.label, 1, 0, 1, 1)

        self.label_6 = QLabel(self.frame)
        self.label_6.setObjectName(u"label_6")
        sizePolicy1.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy1)
        self.label_6.setMinimumSize(QSize(0, 16))
        self.label_6.setMaximumSize(QSize(16777215, 16))

        self.gridLayout_2.addWidget(self.label_6, 0, 3, 1, 1)

        self.label_4 = QLabel(self.frame)
        self.label_4.setObjectName(u"label_4")
        sizePolicy1.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy1)
        self.label_4.setMinimumSize(QSize(0, 16))
        self.label_4.setMaximumSize(QSize(16777215, 16))

        self.gridLayout_2.addWidget(self.label_4, 1, 4, 1, 1)

        self.label_5 = QLabel(self.frame)
        self.label_5.setObjectName(u"label_5")
        sizePolicy1.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy1)
        self.label_5.setMinimumSize(QSize(0, 16))
        self.label_5.setMaximumSize(QSize(16777215, 16))

        self.gridLayout_2.addWidget(self.label_5, 0, 0, 1, 1)

        self.label_2 = QLabel(self.frame)
        self.label_2.setObjectName(u"label_2")
        sizePolicy1.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy1)
        self.label_2.setMinimumSize(QSize(0, 16))
        self.label_2.setMaximumSize(QSize(16777215, 16))

        self.gridLayout_2.addWidget(self.label_2, 1, 1, 1, 1)

        self.label_3 = QLabel(self.frame)
        self.label_3.setObjectName(u"label_3")
        sizePolicy1.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy1)
        self.label_3.setMinimumSize(QSize(0, 16))
        self.label_3.setMaximumSize(QSize(16777215, 16))

        self.gridLayout_2.addWidget(self.label_3, 1, 3, 1, 1)

        self.line_3 = QFrame(self.frame)
        self.line_3.setObjectName(u"line_3")
        self.line_3.setMinimumSize(QSize(1, 0))
        self.line_3.setMaximumSize(QSize(1, 16777215))
        self.line_3.setFrameShadow(QFrame.Plain)
        self.line_3.setFrameShape(QFrame.VLine)

        self.gridLayout_2.addWidget(self.line_3, 0, 2, 2, 1)

        self.gridLayout.addLayout(self.gridLayout_2, 3, 0, 1, 1)

        self.verticalLayout_2.addWidget(self.frame)

        self.groupBox = QGroupBox(Model3DView_Dialog)
        self.groupBox.setObjectName(u"groupBox")
        sizePolicy1.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy1)
        self.verticalLayout_3 = QVBoxLayout(self.groupBox)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.Transparency_label = QLabel(self.groupBox)
        self.Transparency_label.setObjectName(u"Transparency_label")
        sizePolicy2 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.Transparency_label.sizePolicy().hasHeightForWidth())
        self.Transparency_label.setSizePolicy(sizePolicy2)
        self.Transparency_label.setMinimumSize(QSize(80, 22))
        self.Transparency_label.setMaximumSize(QSize(80, 22))

        self.horizontalLayout_2.addWidget(self.Transparency_label)

        self.Transparency_horizontalSlider = QSlider(self.groupBox)
        self.Transparency_horizontalSlider.setObjectName(u"Transparency_horizontalSlider")
        sizePolicy3 = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.Fixed)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.Transparency_horizontalSlider.sizePolicy().hasHeightForWidth())
        self.Transparency_horizontalSlider.setSizePolicy(sizePolicy3)
        self.Transparency_horizontalSlider.setMinimumSize(QSize(20, 22))
        self.Transparency_horizontalSlider.setMaximumSize(QSize(200, 22))
        self.Transparency_horizontalSlider.setOrientation(Qt.Horizontal)

        self.horizontalLayout_2.addWidget(self.Transparency_horizontalSlider)

        self.lineEdit = QLineEdit(self.groupBox)
        self.lineEdit.setObjectName(u"lineEdit")
        sizePolicy3.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy3)
        self.lineEdit.setMinimumSize(QSize(25, 22))
        self.lineEdit.setMaximumSize(QSize(25, 22))
        font = QFont()
        font.setFamilies([u"Segoe UI"])
        self.lineEdit.setFont(font)
        self.lineEdit.setAlignment(Qt.AlignCenter)

        self.horizontalLayout_2.addWidget(self.lineEdit)

        self.horizontalSpacer_2 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer_2)

        self.Scaling_toolButton = QToolButton(self.groupBox)
        self.Scaling_toolButton.setObjectName(u"Scaling_toolButton")

        self.horizontalLayout_2.addWidget(self.Scaling_toolButton)

        self.Panning_toolButton = QToolButton(self.groupBox)
        self.Panning_toolButton.setObjectName(u"Panning_toolButton")

        self.horizontalLayout_2.addWidget(self.Panning_toolButton)

        self.Tracking_toolButton = QToolButton(self.groupBox)
        self.Tracking_toolButton.setObjectName(u"Tracking_toolButton")

        self.horizontalLayout_2.addWidget(self.Tracking_toolButton)

        self.verticalLayout_3.addLayout(self.horizontalLayout_2)

        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.Axis_checkBox = QCheckBox(self.groupBox)
        self.Axis_checkBox.setObjectName(u"Axis_checkBox")
        self.Axis_checkBox.setEnabled(True)
        sizePolicy4 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.Axis_checkBox.sizePolicy().hasHeightForWidth())
        self.Axis_checkBox.setSizePolicy(sizePolicy4)
        self.Axis_checkBox.setChecked(False)

        self.horizontalLayout.addWidget(self.Axis_checkBox)

        self.Volume_checkBox = QCheckBox(self.groupBox)
        self.Volume_checkBox.setObjectName(u"Volume_checkBox")
        self.Volume_checkBox.setChecked(True)

        self.horizontalLayout.addWidget(self.Volume_checkBox)

        self.Edge_checkBox = QCheckBox(self.groupBox)
        self.Edge_checkBox.setObjectName(u"Edge_checkBox")
        self.Edge_checkBox.setEnabled(True)
        sizePolicy4.setHeightForWidth(self.Edge_checkBox.sizePolicy().hasHeightForWidth())
        self.Edge_checkBox.setSizePolicy(sizePolicy4)
        self.Edge_checkBox.setChecked(False)

        self.horizontalLayout.addWidget(self.Edge_checkBox)

        self.line = QFrame(self.groupBox)
        self.line.setObjectName(u"line")
        sizePolicy5 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy5)
        self.line.setMinimumSize(QSize(1, 24))
        self.line.setMaximumSize(QSize(1, 16777215))
        self.line.setFrameShadow(QFrame.Plain)
        self.line.setFrameShape(QFrame.VLine)

        self.horizontalLayout.addWidget(self.line)

        self.horizontalSpacer = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer)

        self.line_2 = QFrame(self.groupBox)
        self.line_2.setObjectName(u"line_2")
        sizePolicy5.setHeightForWidth(self.line_2.sizePolicy().hasHeightForWidth())
        self.line_2.setSizePolicy(sizePolicy5)
        self.line_2.setMinimumSize(QSize(1, 24))
        self.line_2.setMaximumSize(QSize(1, 16777215))
        self.line_2.setFrameShadow(QFrame.Plain)
        self.line_2.setFrameShape(QFrame.VLine)

        self.horizontalLayout.addWidget(self.line_2)

        self.Reset_pushButton = QPushButton(self.groupBox)
        self.Reset_pushButton.setObjectName(u"Reset_pushButton")
        self.Reset_pushButton.setMinimumSize(QSize(60, 24))
        self.Reset_pushButton.setMaximumSize(QSize(80, 24))

        self.horizontalLayout.addWidget(self.Reset_pushButton)

        self.Close_pushButton = QPushButton(self.groupBox)
        self.Close_pushButton.setObjectName(u"Close_pushButton")
        sizePolicy4.setHeightForWidth(self.Close_pushButton.sizePolicy().hasHeightForWidth())
        self.Close_pushButton.setSizePolicy(sizePolicy4)
        self.Close_pushButton.setMinimumSize(QSize(60, 24))
        self.Close_pushButton.setMaximumSize(QSize(80, 24))

        self.horizontalLayout.addWidget(self.Close_pushButton)

        self.verticalLayout_3.addLayout(self.horizontalLayout)

        self.verticalLayout_2.addWidget(self.groupBox)

        self.retranslateUi(Model3DView_Dialog)

        QMetaObject.connectSlotsByName(Model3DView_Dialog)

    # setupUi

    def retranslateUi(self, Model3DView_Dialog):
        Model3DView_Dialog.setWindowTitle(QCoreApplication.translate("Model3DView_Dialog", u"3D View", None))
        self.label.setText(QCoreApplication.translate("Model3DView_Dialog", u"Rotate: LMB + drag", None))
        self.label_6.setText(QCoreApplication.translate("Model3DView_Dialog", u"macOS:", None))
        self.label_4.setText(QCoreApplication.translate("Model3DView_Dialog", u"Move: Command + drag", None))
        self.label_5.setText(QCoreApplication.translate("Model3DView_Dialog", u"Windows:", None))
        self.label_2.setText(QCoreApplication.translate("Model3DView_Dialog", u"Move: Ctrl + LMB + drag", None))
        self.label_3.setText(QCoreApplication.translate("Model3DView_Dialog", u"Rotate: Option + drag", None))
        self.groupBox.setTitle("")
        self.Transparency_label.setText(QCoreApplication.translate("Model3DView_Dialog", u"Transparency", None))
        self.lineEdit.setText(QCoreApplication.translate("Model3DView_Dialog", u"0", None))
        self.Axis_checkBox.setText(QCoreApplication.translate("Model3DView_Dialog", u"Axis", None))
        self.Volume_checkBox.setText(QCoreApplication.translate("Model3DView_Dialog", u"Volume", None))
        self.Edge_checkBox.setText(QCoreApplication.translate("Model3DView_Dialog", u"Edge", None))
        self.Reset_pushButton.setText(QCoreApplication.translate("Model3DView_Dialog", u"Reset", None))
        self.Close_pushButton.setText(QCoreApplication.translate("Model3DView_Dialog", u"Close", None))


class CustomGLViewWidget(GLViewWidget):
    def __init__(self):
        super().__init__()
        self._is_scaling = False
        self._is_panning = False
        self._is_tracking = False
        self._last_pos = None
        self.cam_dist = 0

    def mousePressEvent(self, event):
        if self._is_scaling or self._is_panning or self._is_tracking:
            self._last_pos = event.position()
        else:
            super().mousePressEvent(event)

    def mouseMoveEvent(self, event):
        if self._last_pos:
            dx = event.position().x() - self._last_pos.x()
            dy = event.position().y() - self._last_pos.y()
            if self._is_scaling:
                self.opts['distance'] = self.cam_dist * 0.999 ** (dx - dy)
                self.update()
            elif self._is_panning:
                # Apply the pan in world coordinates
                self.pan(dx, dy, 0, "view")
                self._last_pos = event.position()
            elif self._is_tracking:
                # Apply the track in world coordinates
                self.pan(dx, 0, dy, "view")
                self._last_pos = event.position()
        else:
            lpos = event.position() if hasattr(event, 'position') else event.localPos()
            diff = lpos - self.mousePos
            self.mousePos = lpos

            if event.buttons() == Qt.MouseButton.LeftButton:
                if (event.modifiers() & Qt.KeyboardModifier.ControlModifier):
                    self.pan(diff.x(), diff.y(), 0, relative='view')
                else:
                    self.orbit(-diff.x(), diff.y())
            elif event.buttons() == Qt.MouseButton.MiddleButton:
                if (event.modifiers() & Qt.KeyboardModifier.ControlModifier):
                    self.pan(diff.x(), 0, diff.y(), relative='view-upright')
                else:
                    self.pan(diff.x(), diff.y(), 0, relative='view-upright')


    def mouseReleaseEvent(self, event):
        if self._is_scaling:
            self.cam_dist = self.opts['distance']
        self._last_pos = None
        super().mouseReleaseEvent(event)
